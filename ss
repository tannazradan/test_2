سطوح مختلف برنامه نویسی

امروزه سطح‌ بندی‌ های مختلفی برای زبان‌ های برنامه‌ نویسی شکل ‌گرفته است. در بعضی از این بخش ‌بندی‌ها تنها 3 سطح از زبان مدنظر است، زبان‌ های برنامه‌نویسی سطح بالا، زبان های برنامه نویسی سطح پایین و زبان‌ های ماشین.
 در بعضی دیگر، زبان‌ های میانی یا Mid-Level هم جزئی از این سطوح هستند درحالی‌ که در خیلی از متون مخالف واژه سطح میانی هستند.
 به‌ طور کلی برای دسته‌بندی سطوح مختلف برنامه‌ نویسی رویکردهای مختلفی وجود دارد.

در اینجا می‌خواهیم سطوح زبان‌ های برنامه‌ نویسی را به 5 بخش تقسیم کنیم که شامل موارد زیر است:

•	زبان‌ های سطح بالا
•	زبان‌ های سطح میانی
•	زبان‌ های سطح پایین
•	زبان اسمبلیزبان ماشین

زبان‌ های سطح بالا
زبان‌ های سطح بالا یا High-Level Language از میزان انتزاع بالاتری برخورد دارند و تمامی کارهای سطح پایین و تعاملات با سیستم عامل و سخت افزار در خود زبان وجود دارد؛ بنابراین برنامه‌ نویس نیازی ندارد تا مستقیماً در کار سخت‌افزار و سیستم‌عامل دخالتی کند؛ به‌عنوان‌مثال مدیریت حافظه در اکثر این زبان‌ها به ‌وسیله سیستم Garbage Collection که در خود زبان تعبیه شده است انجام می‌شود.

•	مزایای زبان‌ های سطح بالا:
ساده هستند و کدهای نوشته شده بسیار شبیه به زبان انگلیسی است.
تمرکز اصلی برنامه نویس بر روی ساخت برنامه است و نیازی نیست نگران مباحث پیچیده سخت‌ افزاری و حافظهای باشند.
اشکال زدایی (Debugging) در این زبان‌ها و یافتن باگ در آنها بسیار سرراست‌تر است.

•	معایب زبان‌ های سطح بالا:
باتوجه‌به اینکه کامپیوتر تنها زبان ماشین را می‌فهمد، نیاز است تا کدهای نوشته شده توسط مفسر یا کامپایلر (Compiler) به زبان ماشین تبدیل شوند.
زبان‌های برنامه‌ نویسی سطح بالا به ‌مراتب کندتر از بقیه ی سطوح برنامه‌ نویسی هستند؛ در واقع هرچه زبان سطح بالاتر و ساده‌تر باشد کندتر است.
زبان‌های برنامه‌ نویسی سطح بالا نیاز به حافظه رم (RAM) بالایی دارند.


•	انواع زبان‌ های برنامه‌ نویسی سطح بالا
زبان‌ های زیر در دسته زبان‌ های High-Level قرار می‌گیرند:

زبان Java
 زبان PHP
زبان java script
 زبان C++
‎زبان C# 
زبان پایتون (Python)
 زبان Perl



زبان های سطح میانی
هرچند که زبان‌ های سطح میانی یا Mid-Level Language زیاد در متون تخصصی یافت نمی‌شود؛ اما در بعضی متون به آن اشاره شده است؛ بنابراین بد نیست که تعریف این سطح زبان را بدانید.
 زبان‌ های سطح میانی به طور خلاصه به زبان‌هایی گفته می‌شود که ویژگی‌ زبان‌ های سطح بالا و سطح پایین را داشته باشند؛ این زبان‌ها هم از خاصیت‌هایی مثل Abstraction زبان‌ های سطح بالا برخوردارند و هم به منابع سیستم دسترسی دارند و می‌توانند نحوه عملکرد سخت‌افزار را مشخص کنند.

انواع زبان‌ های برنامه‌ نویسی سطح میانی:
زبان C 
زبان C++
زبان Rust

زبان های سطح پایین
سینتکس‌های زبان سطح پایین یا Low-Level عوض نزدیک بودن به زبان انسان، به زبان ماشین نزدیک‌تر هستند؛ این زبان‌ها به سخت‌افزار وابسته هستند، مثلاً یک برنامه نوشته شده ممکن است در کامپیوترهای مختلف به صورت‌های مختلف عمل کند؛ همچنین به‌ وسیله زبان‌ های سطح پایین می‌توان مستقیماً به سخت‌افزار و ثبات‌ها (registers) دسترسی داشت و آنها را تغییر داد و از آنها استفاده کرد.

•	مزایای زبان‌ های سطح پایین
زبان‌ های سطح پایین الزاماً نیاز به کامپایلر ندارند و بسیار سریع هستند.با توجه ‌به سطح پایین و سبک بودن زبان، از لحاظ حافظه‌ای بهینه هستند و داده‌های زیادی برای ذخیره ‌کردن ندارند.
برنامه‌ نویسان در آن به طور کامل به سخت‌افزار و حافظه دسترسی دارند و می‌توانند هر طور که می‌خواهند آنها را تغییر دهند.


•	معایب زبان‌ های سطح پایین
کدهای نوشته شده به زبان‌ های سطح پایین در ماشین‌های مختلف متفاوت عمل می‌کنند و ممکن است مطابق خواسته‌های برنامه‌ نویس نباشد.
کدنویسی با این زبان‌ها سخت‌تر است؛ چراکه دارای سینتکس‌ها و توابع پیچیده‌تری هستند.پیداکردن باگ و خطا در این زبان‌ها بسیار سخت‌تر از زبان‌ های سطح بالا است؛ ممکن است خطایی در برنامه وجود داشته باشد؛ اما برنامه کاملاً عادی عمل کند.

انواع زبان‌های برنامه‌ نویسی سطح پایین:

زبان C
زبان Fortran
زبان Ada
نکته: گاهی اوقات زبان‌های اسمبلی و زبان ماشین نیز در دسته زبان‌ های سطح پایین قرار می‌گیرند.

زبان اسمبلی
زبان اسمبلی (Assembly) برای راحت‌تر شدن کار برنامه‌ نویسان ایجاد شده بود؛ زیرا کارکردن با 0 و 1 مطلق بسیار پیچیده است و شانس وقوع خطا را بالا می‌برد؛ بنابراین زبان اسمبلی آمد تا کار برنامه‌ نویسان را کمی راحت‌تر کند؛ به‌عنوان‌مثال در زبان‌های اسمبلی دستوراتی مانند ADD، MOV، SUB و غیر وجود دارد که برای انسان خواناتر هستند.
 ازآنجایی‌که دستورات زبان اسمبلی دارای واژه‌های زبان انگلیسی است، در نتیجه نیاز به یک مترجم دارد تا دستورات را به زبان ماشین تبدیل کند. به این مترجم‌ها اسمبلر یا Assembler گفته می‌شود.


زبان ماشین
اولین نسل زبان‌ها، زبان ماشین یا Machine Language بود که در آن دستورات شامل رشته‌ای متشکل از 0 و 1 است.

اینکه چه سطحی از زبان را باید انتخاب کنیم، مستقیماً به هدف از انجام‌دادن کار برنامه‌ نویس دارد.

•	کاربرد زبان‌ های سطح بالا
زبان‌ های سطح بالا معمولاً برای تولید نرم‌افزارها، وب‌سایت‌ها، بازی و غیره استفاده می‌شود. 
مانند ایجاد و تست کردن نرم افزار و سیستم‌های تجاریزبان‌ های سطح بالا مانند زبان R، زبان Julia و متلب به طور گسترده برای تحقیقات استفاده می‌شود.
زبان‌ های سطح بالایی مانند پایتون برای مدیریت‌کردن و تحلیل داده‌های حجیم مورداستفاده قرار می‌گیرد.

•	کاربرد زبان‌ های سطح پایین
زبان‌ های سطح پایین معمولاً برای مواقعی کاربرد دارد که سرعت و پرفورمنس و دسترسی به سخت‌افزار برایمان مهم باشد.
 برای برنامه‌ نویسی سیستم‌های حساس مانند ماهواره‌ها و موشک‌ها نیز از زبان‌ های سطح پایین استفاده می‌شود.

مانند ساخت سیستم‌های بی‌درنگ یا Real-Time که نیاز به پرفورمنس بسیار زیادی دارد، مانند سیستم‌های کنترل ترافیک هوایی.
سخت‌افزارهای سیستم‌های تعبیه شد(Embedded System)  که تعداد آنها هم زیاد است، از زبان‌های سطح پایین استفاده می‌کنند؛ مانند کولر، اسپیکر، مودم و...درایورها یا راه‌اندازهای قطعات مختلف سخت‌ افزار مانند کارت صدا و کارت گرافیک، همچنین کرنل سیستم‌عامل‌ها به ‌وسیله زبان‌ های سطح پایین نوشته می‌شوند.
